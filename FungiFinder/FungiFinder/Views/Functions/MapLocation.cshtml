@model FungiFinder.Models.ViewModels.FunctionMapVM
@*@{
        Layout = null;
    }*@


<!DOCTYPE html>
<html>







<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=yes">
    @*<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/skeleton/2.0.4/skeleton.min.css">*@
    <link href="~/bootstrap-4.4.1-dist/css/bootstrap.css" rel="stylesheet" />
    <link href="~/bootstrap-4.4.1-dist/css/bootstrap-grid.css" rel="stylesheet" />


    @*<link href="~/css/PicStyles.css" rel="stylesheet" />*@







    <title>Removing Markers</title>
    <style>
        /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
        #map {
            height: 100%;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }

        #floating-panel {
            position: absolute;
            top: 10px;
            left: 25%;
            z-index: 5;
            background-color: #fff;
            padding: 5px;
            border: 1px solid #999;
            text-align: center;
            font-family: 'Roboto','sans-serif';
            line-height: 30px;
            padding-left: 10px;
        }
    </style>









    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    @*@RenderSection("styles", false)*@
</head>
<body>
    @if (User.Identity.IsAuthenticated)
    {
        <nav class="navbar navbar-expand-lg navbar-dark" style="background-color: #17a2b8">

            <a asp-controller="Functions" asp-action="Main" class="navbar-brand">Home</a>
            <button type="button" value="Hem" class="navbar-toggler" data-toggle="collapse" data-target="#navbarNavAltMarkup" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse clearfix" id="navbarNavAltMarkup">
                <ul class="navbar-nav">
                    <li class="nav-item active">
                        <a asp-controller="Functions" asp-action="Library" class="nav-item nav-link">Bibliotek</a>
                    </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Profil</a>
                        <div class="dropdown-menu dropdown-menu-lg-right" aria-labelledby="navbarDropdownMenuLink">
                            <a asp-controller="Account" asp-action="Profile" class="dropdown-item ">Gå till min profil</a>
                            <a asp-controller="Account" asp-action="Logout" class="dropdown-item ">Logga Ut</a>
                        </div>
                    </li>
                </ul>
            </div>

        </nav>
    }
    else
    {
        <nav class="navbar navbar-expand-lg navbar-dark" style="background-color: #17a2b8">
            <a href="" class="navbar-brand" style="pointer-events: none; cursor: default">Fungi Finder</a>
            <button type="button" value="Hem" class="navbar-toggler" data-toggle="collapse" data-target="#navBarMarkup" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle Navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navBarMarkup">
            </div>
        </nav>
    }
    <div>
        @*@RenderBody()*@
    </div>
    @*@RenderSection("scripts", false)*@
    <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>















    @*<title>Removing Markers</title>
        <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
        <meta charset="utf-8">
        <style>
            /* Always set the map height explicitly to define the size of the div
            * element that contains the map. */
            #map {
                height: 100%;
            }
            /* Optional: Makes the sample page fill the window. */
            html, body {
                height: 100%;
                margin: 0;
                padding: 0;
            }

            #floating-panel {
                position: absolute;
                top: 10px;
                left: 25%;
                z-index: 5;
                background-color: #fff;
                padding: 5px;
                border: 1px solid #999;
                text-align: center;
                font-family: 'Roboto','sans-serif';
                line-height: 30px;
                padding-left: 10px;
            }
        </style>*@


    <div id="floating-panel">
        <input onclick="clearMarkers();" type=button value="Hide Markers">
        <input onclick="showMarkers();" type=button value="Show All Markers">
        <input onclick="deleteMarkers();" type=button value="Delete Markers">
        <input onclick="getGoordinates();" type=button value="Save current loacation">
    </div>
    <div id="map"></div>

    <script>
        var map, infoWindow;
        var markers = [];
        var pos;

        function initMap() {

            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 62.0236528, lng: 15.119680 },
                zoom: 6,
            });

            infoWindow = new google.maps.InfoWindow;


            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    infoWindow.setPosition(pos);
                    infoWindow.setContent('Location found.');
                    infoWindow.open(map);
                    map.setCenter(pos);
                    map.setZoom(15);
                }, function () {
                    handleLocationError(true, infoWindow, map.getCenter());
                });
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
            }


            function handleLocationError(browserHasGeolocation, infoWindow, pos) {
                infoWindow.setPosition(pos);
                infoWindow.setContent(browserHasGeolocation ?
                    'Error: The Geolocation service failed.' :
                    'Error: Your browser doesn\'t support geolocation.');
                infoWindow.open(map);
            }

            // This event listener will call addMarker() when the map is clicked.
            map.addListener('click', function (event) {
                addMarker(event.latLng);
            });

            // Adds a marker at the center of the map.
        }


        function getGoordinates() {
            var kos = pos.toString();

            console.log(pos);
            var url = `/Map/${kos}`
            $.ajax({
                url: url,
                type: "GET",
                success: function (result) {
                    $("#divResult").html(result);
                }
            });
        }


        // Adds a marker to the map and push to the array.
        function addMarker(location) {
            var marker = new google.maps.Marker({
                position: location,
                map: map
            });
            markers.push(marker);
        }

        // Sets the map on all markers in the array.
        function setMapOnAll(map) {
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(map);
            }
        }

        // Removes the markers from the map, but keeps them in the array.
        function clearMarkers() {
            setMapOnAll(null);
        }

        // Shows any markers currently in the array.
        function showMarkers() {
            setMapOnAll(map);
        }

        // Deletes all markers in the array by removing references to them.
        function deleteMarkers() {
            clearMarkers();
            markers = [];
        }

    </script>

    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCb6PsUEvawrKCwb3qG6myykc9ORaMX83c&callback=initMap">

    </script>
</body>
</html>
}
